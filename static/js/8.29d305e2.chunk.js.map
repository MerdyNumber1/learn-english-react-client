{"version":3,"sources":["components/forms/SignupForm/SignupForm.module.sass","pages/SignupPage/SignupPage.module.sass","components/forms/SignupForm/schema.ts","components/forms/SignupForm/index.tsx","pages/SignupPage/index.tsx"],"names":["module","exports","SignupSchema","Yup","shape","email","required","name","min","max","password","Text","Typography","SignupForm","useFormik","initialValues","validationSchema","onSubmit","data","console","log","getFieldProps","handleSubmit","errors","touched","action","className","styles","error","type","message","input","placeholder","button","login","to","Title","SignupPage","Helmet","container","level"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,MAAQ,0BAA0B,OAAS,2BAA2B,MAAQ,4B,oBCAlID,EAAOC,QAAU,CAAC,UAAY,gC,yICUfC,EATMC,MAAaC,MAAM,CACtCC,MAAOF,MAAaE,MAAM,kFAAsBC,SAAS,sEACzDC,KAAMJ,MAAaK,IAAI,EAAG,uEAAgBC,IAAI,GAAI,iEAAeH,SAAS,yFAC1EI,SAAUP,MACPK,IAAI,EAAG,yFACPC,IAAI,GAAI,mFACRH,SAAS,uG,kBCDNK,EAASC,IAATD,KAwDOE,EAhDc,WAAO,IAAD,EACwBC,YAA6B,CACpFC,cAAe,CACbV,MAAO,GACPE,KAAM,GACNG,SAAU,IAEZM,iBAAkBd,EAClBe,SAPoF,SAO3EC,GACPC,QAAQC,IAAIF,MARRG,EADyB,EACzBA,cAAeC,EADU,EACVA,aAAcC,EADJ,EACIA,OAAQC,EADZ,EACYA,QAY7C,OACE,uBAAMC,OAAO,GAAGR,SAAUK,EAA1B,UACGC,EAAOlB,OAASmB,EAAQnB,OACvB,cAAC,IAAD,CAAOqB,UAAWC,IAAOC,MAAOC,KAAK,QAAQC,QAASP,EAAOlB,QAE9DkB,EAAOhB,MAAQiB,EAAQjB,MACtB,cAAC,IAAD,CAAOmB,UAAWC,IAAOC,MAAOC,KAAK,QAAQC,QAASP,EAAOhB,OAE9DgB,EAAOb,UAAYc,EAAQd,UAC1B,cAAC,IAAD,CAAOgB,UAAWC,IAAOC,MAAOC,KAAK,QAAQC,QAASP,EAAOb,WAE/D,cAAC,IAAD,aACEgB,UAAWC,IAAOI,MAClBF,KAAK,QACLG,YAAY,YACRX,EAAc,WAEpB,cAAC,IAAD,aAAOK,UAAWC,IAAOI,MAAOF,KAAK,OAAOG,YAAY,yBAAaX,EAAc,UACnF,cAAC,IAAD,aACEK,UAAWC,IAAOI,MAClBF,KAAK,WACLG,YAAY,2CACRX,EAAc,cAEpB,cAAC,IAAD,CAAQK,UAAWC,IAAOM,OAAQJ,KAAK,UAAvC,0HAGA,sBAAKH,UAAWC,IAAOO,MAAvB,UACE,cAACvB,EAAD,iCACA,cAAC,IAAD,CAAYwB,GAAG,SAAf,oD,kBCnDAC,EAAUxB,IAAVwB,MAcOC,UAZc,kBAC3B,qCACE,cAACC,EAAA,EAAD,UACE,yGAEF,sBAAKZ,UAAWC,IAAOY,UAAvB,UACE,cAACH,EAAD,CAAOI,MAAO,EAAd,2HACA,cAAC,EAAD","file":"static/js/8.29d305e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"SignupForm_error__12v9v\",\"input\":\"SignupForm_input__2Vgkp\",\"button\":\"SignupForm_button__3K-nt\",\"login\":\"SignupForm_login__1q-vr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignupPage_container__2_F5p\"};","import * as Yup from 'yup';\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  email: Yup.string().email('Неправильный email').required('Email обязателен'),\r\n  name: Yup.string().min(2, 'Короткое имя').max(56, 'Длинное имя').required('Имя обязательно'),\r\n  password: Yup.string()\r\n    .min(6, 'Короткий пароль')\r\n    .max(56, 'Длинный пароль')\r\n    .required('Пароль обязателен'),\r\n});\r\n\r\nexport default SignupSchema;\r\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { Link as RouterLink } from '@reach/router';\r\nimport { Input, Alert, Button, Typography } from 'antd';\r\nimport SignupSchema from './schema';\r\nimport styles from './SignupForm.module.sass';\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface ISignupFormValues {\r\n  email: string;\r\n  name: string;\r\n  password: string;\r\n}\r\n\r\nconst SignupForm: React.FC = () => {\r\n  const { getFieldProps, handleSubmit, errors, touched } = useFormik<ISignupFormValues>({\r\n    initialValues: {\r\n      email: '',\r\n      name: '',\r\n      password: '',\r\n    },\r\n    validationSchema: SignupSchema,\r\n    onSubmit(data) {\r\n      console.log(data);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form action=\"\" onSubmit={handleSubmit}>\r\n      {errors.email && touched.email && (\r\n        <Alert className={styles.error} type=\"error\" message={errors.email} />\r\n      )}\r\n      {errors.name && touched.name && (\r\n        <Alert className={styles.error} type=\"error\" message={errors.name} />\r\n      )}\r\n      {errors.password && touched.password && (\r\n        <Alert className={styles.error} type=\"error\" message={errors.password} />\r\n      )}\r\n      <Input\r\n        className={styles.input}\r\n        type=\"email\"\r\n        placeholder=\"Email...\"\r\n        {...getFieldProps('email')}\r\n      />\r\n      <Input className={styles.input} type=\"name\" placeholder=\"Имя...\" {...getFieldProps('name')} />\r\n      <Input\r\n        className={styles.input}\r\n        type=\"password\"\r\n        placeholder=\"Пароль...\"\r\n        {...getFieldProps('password')}\r\n      />\r\n      <Button className={styles.button} type=\"primary\">\r\n        Зарегистрироваться\r\n      </Button>\r\n      <div className={styles.login}>\r\n        <Text>Или</Text>\r\n        <RouterLink to=\"/login\"> войти</RouterLink>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React from 'react';\r\nimport { Typography } from 'antd';\r\nimport { Helmet } from 'react-helmet';\r\nimport SignupForm from 'components/forms/SignupForm';\r\nimport styles from './SignupPage.module.sass';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst SignupPage: React.FC = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Регистрация</title>\r\n    </Helmet>\r\n    <div className={styles.container}>\r\n      <Title level={3}>Зарегистрироваться:</Title>\r\n      <SignupForm />\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default SignupPage;\r\n"],"sourceRoot":""}